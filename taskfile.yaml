version: '3'

dotenv: ['.env.local']

vars:
  GOLANG_WORKSPACES: ./internal/...
  GOLANG_COVERAGE: coverage.out


tasks:
  build:
    desc: Build the application.
    deps: [gen, go-ci, frontend-ci]
    cmds:
      - wails build
  dev:
    desc: Run the application in development mode.
    deps: [gen]
    cmds:
      - wails dev

  clean-db:
    desc: Clean the database.
    cmds:
      - rm -f $LOCAL_DEV_DIR/watchtower.db

  gen:
    desc: Generate go code.
    cmds:
      - sqlc generate
      - go generate ./...

  go-lint:
    desc: Run go linters.
    cmds:
      - golangci-lint run {{ .GOLANG_WORKSPACES }} --fix
      - govulncheck {{ .GOLANG_WORKSPACES }}
      - go fmt {{ .GOLANG_WORKSPACES }}
      -
  go-lint-watch:
    desc: Run go linters in watch mode.
    watch: true
    sources:
      - ./**/*.go
    cmds:
      - task: go-lint

  go-install:
    desc: Install go dependencies.
    deps: [go-install-tools]
    cmds:
      - go mod tidy
      - go mod download

  go-install-tools:
    desc: Install CI tools
    cmds:
      - go install github.com/matryer/moq@latest
      - go install github.com/sqlc-dev/sqlc/cmd/sqlc@latest
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.2.2

  go-test:
    desc: Run go tests.
    deps: [gen]
    cmds:
      - go test -cover -coverprofile={{ .GOLANG_COVERAGE }} -failfast {{ .GOLANG_WORKSPACES }}

  go-watch:
    desc: Run go tests in watch mode.
    cmds:
      - gow test -cover -coverprofile={{ .GOLANG_COVERAGE }} -failfast {{ .GOLANG_WORKSPACES }}

  go-gen-coverage:
    desc: Generate go coverage.
    deps: [go-test]
    cmds:
      - grep -v -E -f ${PWD}/.covignore {{ .GOLANG_COVERAGE }} > coverage.filtered.out
      - mv coverage.filtered.out {{ .GOLANG_COVERAGE }}

  go-cover:
    desc: Run go coverage.
    deps: [go-gen-coverage]
    cmds:
      - go tool cover -func={{ .GOLANG_COVERAGE }} | grep total

  go-cover-html:
    desc: Run go coverage html.
    deps: [go-gen-coverage]
    cmds:
      - go tool cover -html={{ .GOLANG_COVERAGE }}

  go-ci:
    desc: Run go ci tasks.
    cmds:
      - task: go-lint
      - task: go-cover


  frontend-install:
    desc: Install frontend dependencies.
    dir: frontend
    cmds:
      - npm install

  frontend-format:
    desc: Run frontend formatters.
    dir: frontend
    cmds:
      - npm run format
      - npm run lint:fix

  frontend-test:
    desc: Run frontend unit tests.
    dir: frontend
    cmds:
      - npm run test:coverage

  frontend-watch:
    desc: Run frontend unit tests in watch mode.
    dir: frontend
    cmds:
      - npm run test:unit

  frontend-lint:
    desc: Run frontend linters.
    dir: frontend
    cmds:
      - npm run lint

  frontend-check:
    desc: Run frontend checks.
    dir: frontend
    cmds:
      - npm run check

  frontend-ci:
    desc: Run frontend ci tasks.
    dir: frontend
    deps: [frontend-lint, frontend-check, frontend-test]

  reset:
    desc: Reset the application.
    deps: [clean-db]
    cmds:
      - task: dev

  tools-get:
    desc: Get go dev tools.
    cmds:
      - go install golang.org/x/vuln/cmd/govulncheck@latest
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.2.2